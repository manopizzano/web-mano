@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  @if $fallback {
    font-size: $fallback;
  }
  font-size: $responsive;
}

@mixin showQueries {
  &:after {
    position: fixed;
    background: white;
    z-index: 9999999;
    @include spacing('md', ('left', 'bottom'));
    background: white;
    padding: 0.5em;
    border-radius: 50%;
  }
  @each $bp, $val in $breakpoints {
    @include bp($bp) {
      &:after {
        content: '#{$bp}';
      }
    }
  }
}

@mixin content-width($size) {
  @each $bp, $widths in $content-width {
    @if $bp == sm {
      max-width: 100%;
    } @else {
      @include bp($bp) {
        $width: map-get($widths, $size);
        max-width: rem-calc($width);
        margin-left: auto;
        margin-right: auto;
      }
    }
  }
}

@mixin container {
  @include content-width('image');
  position: relative;
  width: 100%;
  margin: 0 auto;
  padding-left: spacing('xs', 'sm');
  padding-right: spacing('xs', 'sm');

  @include bp(md) {
    @include spacing('md', ('padding-left', 'padding-right'));
  }
}

// Font mixins

@mixin italic {
  font-weight: normal;
  font-style: italic;
  font-family: 'Eurostile Italic';
}

@mixin bold {
  font-weight: normal;
  font-style: normal;
  font-family: 'Eurostile Bold';
}

@mixin headerHeight {
  @include spacing('lg', 'margin-top');
  padding-top: rem-calc(88);

  @include bp(md) {
    padding-top: rem-calc(87);
  }

  @include bp(lg) {
    padding-top: rem-calc(96);
  }
}

@mixin is-ie {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    /* IE10+ CSS styles go here */
    @content;
  }
}

@mixin minusHeaderHeight {
  height: calc(100vh - var(--headerHeight));
}
